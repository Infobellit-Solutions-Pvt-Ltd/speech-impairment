# #sudo systemctl stop nginx --- if not working uses this
# #sudo lsof -i :5050
# #sudo systemctl start nginx
# #python3 time.py

server {

    listen 5020 ;
    #listen 5020 ssl;  # Enable SSL on port 5020
    server_name localhost;
    #server_name 192.168.0.182;  # Replace with your IP or domain 
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem; 
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
 
    root /home/arun/ranga-ai/active-speech/speech-impairment/build;  # Path to React build
    index index.html;
 
    location / {
        try_files $uri $uri/ /index.html;
    }
 
    location /ui {
        root /home/arun/ranga-ai/active-speech/speech-impairment/build;  # Absolute path to build folder
        try_files $uri /index.html;
    }
 
    # Reverse proxy for the backend API

    location /api {
        proxy_pass http://192.168.0.182:5050;
        #proxy_pass https://192.168.0.182:5050;  # Flask backend on port 5050
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
    }
    # Let's Encrypt challenge for future SSL renewal (if needed)

    location /.well-known/acme-challenge/ {
        root /var/www/html;
        try_files $uri =404;
    }
}
 
# Redirect HTTP traffic on port 80 to HTTPS (Optional)
server {
    listen 80;
    server_name localhost;
    #server_name 192.168.0.182;
    location / {
        return 301 https://$server_name:5020$request_uri;
    }
} 
